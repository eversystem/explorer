#
# A trust 
# IOST version
# 
version: '2'

networks:
  basic:

services:

######## IOST network ######## 

  iostnode:
    image: iostio/iost-node:3.2.0
    container_name: iost-node
    ports:
      - "30000-30003:30000-30003"
    command: iserver -f /var/lib/iserver/iserver.yml 2>&1
    environment:
      - ADMIN=2yquS3ySrGWPEKywCPzX4RTJugqRh7kJSo5aehsLYPEWkUxBWA39oMrZ7ZxuM4fgyXYs2cPwh5n8aNNpH5x2VyK1
      - ADMINNAME=admin
    volumes:
      - ../atrust-smartcontract:/root/sc
      - ./iserver:/var/lib/iserver
    networks:
      - basic

# API server 
  app:
    container_name: app
    image: node:lts-alpine
    tty: true
    environment:
      - NODE_ENV=development
    working_dir: /root/api
    command: /bin/ash
    volumes:
        - ../atrust-rest-api:/root/api
    networks:
        - basic
    ports:
        - 3000:3000

# A server to check webhook notifications 
  webhook:
    container_name: webhook
    image: node:lts-alpine
    tty: true
    working_dir: /root/
    # command: node app.js
    volumes:
        - ./webhook-server:/root/
    networks:
        - basic
    ports: 
        - 8000:8000
    
# mysql db 
  db:
    container_name: mysql
    image: mysql:5.6
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    restart: always
    environment:
      MYSQL_DATABASE: atrustdb
      MYSQL_USER: admin
      MYSQL_PASSWORD: adminpw
      MYSQL_ROOT_PASSWORD: adminpw
    ports:
        - 3306:3306
    volumes:
      - ../atrust-infra/schema-sql:/docker-entrypoint-initdb.d
      - ./mysql/data:/var/lib/mysql
    networks:
        - basic

# redis for job queue. Used by bull 
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
    networks:
        - basic
    volumes:
      - ./redis:/data

# Prometheus server
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - 9090:9090
    networks:
        - basic
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

# Prometheus exporter
  pushgateway:
    container_name: pushgateway
    image: prom/pushgateway
    ports:
      - 9091:9091
    networks:
        - basic

######## IOST explorer ######## 

  backend:
    container_name: backend
    image: backend
    working_dir: /go/src/github.com/iost-official/explorer/backend
    tty: true
    ports: 
      - 8088:8080
    command: ./start.sh
    networks:
      - basic

  frontend: 
    container_name: frontend
    image: frontend
    working_dir: /work_dir/frontend
    command: npm run dev
    volumes:
      - ./docker/frontend:/work_dir/frontend
    ports: 
      - 8080:8080
    networks:
      - basic

  mongo:
    image: mongo
    restart: always
    container_name: mongo
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    networks:
      - basic

